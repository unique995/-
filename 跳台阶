一只青蛙一次可以跳上1级台阶，也可以跳上2级。
求该青蛙跳上一个n级的台阶总共有多少种跳法（先后次序不同算不同的结果）。
用Fib(n)表示青蛙跳上n阶台阶的跳法数 
设定Fib(0) = 1； 
当n = 1 时， 有0+1：Fib(1) = Fib(0) = 1; 
当n = 2 时， 有：0+2，1+1：Fib(2) = Fib(1) + Fib(0) = 2; 
当n = 3 时，有：0+3，1+1+1，1+2，2+1，：Fib(3) = Fib(2) + Fib(1)+Fib(0)=4; 
…… 
当n = n 时，有Fib(n) = Fib(n-1) + Fib(n-2) + …… + Fib(2) + Fib(1) + Fib(0) ;

计算分析：

Fib(n) = Fib(n-1) + Fib(n-2) + Fib(n-3)…… + Fib(2) + Fib(1) + Fib(0) (1) 
Fib(n-1) = Fib(n-2) + Fib(n-3) + Fib(n-4)…… + Fib(2) + Fib(1) + Fib(0) (2) 
把(2)式代入(1)式，即可得： 
n阶跳：Fib(n) = 2*Fib(n-1) = 2^(n-1)

方法一：1 2和2 1代表一种
自己感觉先后次序不同算相同的结果
public static int jump1(int num) {
//fibonaci:1，1，2，3，5，8，13，21……
    if(num <0) return -1;
    if(num == 1 || num == 2) return 1;  
    return jump1(num-1)+jump1(num-2);
}


方法二：1 2和2 1是两种方法
先后次序不同算不同的结果
public class Solution {
    public int JumpFloor(int target) {
         if(target < 0){
            return -1;
        }
        if(target == 0||target == 1){
            return 1;
        }
        return JumpFloor(target-1)*2;
    }
}
