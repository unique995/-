1、对输入的字符串进行加解密，并输出。
2加密方法为：
当内容是英文字母时则用该英文字母的后一个字母替换，同时字母变换大小写,如字母a时则替换为B；字母Z时则替换为a；
当内容是数字时则把该数字加1，如0替换1，1替换2，9替换0；
其他字符不做变化。
3、解密方法为加密的逆过程。

import java.util.*;

public class Main{
    public static String enCryption(String s1){
        char []en = s1.toCharArray();
        StringBuffer sb = new StringBuffer();
        for(int i = 0;i < en.length;i++){
            sb.append(encryption(en[i]));
        }
        return sb.toString();
    }
    public static char encryption(char c){
        if(c >= 'a' && c <= 'z'){
            return (char)(c+1-32);
        }else if (c == 'z'){
            return 'A';
        }else if (c >= 'A' && c <= 'Z'){
            return (char)(c+1+32);
        }else if(c == 'Z'){
            return 'a';
        }else if(c >= '0' && c <= '9'){
            return (char)(c+1);
        }else if(c == '9'){
            return '0';
        }else
            return c;
    }
    public static String deCryption(String s2){
        char[] de = s2.toCharArray();
        StringBuffer sb2 = new StringBuffer();
        for (int i = 0; i< de.length; i++){
            sb2.append(decryption(de[i]));
        }
        return sb2.toString();
    }
    public static char decryption(char c){
        if(c > 'a' && c <= 'z'){
            return (char)(c-1-32);
        }else if (c == 'a'){
            return 'Z';
        }else if (c > 'A' && c <= 'Z'){
            return (char)(c-1+32);
        }else if(c == 'A'){
            return 'z';
        }else if(c >= '0' && c <= '9'){
            return (char)(c-1);
        }else if(c == '0'){
            return '9';
        }else
            return c;
    }
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        while (scanner.hasNext()){
            String s1 = scanner.nextLine();
            String s2 = scanner.nextLine();
            System.out.println(enCryption(s1));
            System.out.println(deCryption(s2));
        }
    }
}
