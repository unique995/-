小红想买些珠子做一串自己喜欢的珠串。卖珠子的摊主有很多串五颜六色的珠串，但是不肯把任何一串拆散了卖。
于是小红要你帮忙判断一下，某串珠子里是否包含了全部自己想要的珠子？
如果是，那么告诉她有多少多余的珠子；如果不是，那么告诉她缺了多少珠子。
为方便起见，我们用[0-9]、[a-z]、[A-Z]范围内的字符来表示颜色。

输入格式：
每个输入包含 1 个测试用例。每个测试用例分别在 2 行中先后给出摊主的珠串和小红想做的珠串，两串都不超过 1000 个珠子。
输出格式：
如果可以买，则在一行中输出 Yes 以及有多少多余的珠子；
如果不可以买，则在一行中输出 No 以及缺了多少珠子。其间以 1 个空格分隔。

输入样例 1：
ppRYYGrrYBR2258
YrR8RrY
输出样例 1：
Yes 8


import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {
	public static void main(String[] args) throws IOException {
		int[] arr=new int[123];
		int[] arr1=new int[123];
		boolean b=false;
		int sum=0,sum1=0;
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		String s=br.readLine();
		for (int i = 0; i < s.length(); i++) {
			arr[s.charAt(i)]++;
		}
		String s1=br.readLine();
		for (int i = 0; i < s1.length(); i++) {
			arr1[s1.charAt(i)]++;
		}
		for (int i = 48; i < arr1.length; i++) {
			if(arr[i]>=arr1[i]&&arr[i]!=0) {
				sum=sum+arr[i]-arr1[i];
			}
			if(arr1[i]>arr[i]) {
			  b=true;
				sum1=sum1+arr1[i]-arr[i];
			}
		}
		if(!b) {
			System.out.println("Yes "+sum);
		}else {
			System.out.println("No "+sum1);
		}
	}
}
