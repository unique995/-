把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。 
输入一个非减排序的数组的一个旋转，输出旋转数组的最小元素。
例如数组{3,4,5,1,2}为{1,2,3,4,5}的一个旋转，该数组的最小值为1。
NOTE：给出的所有元素都大于0，若数组大小为0，请返回0。

题目思考：
首先，我们看到的非递减排序数组，实质上就是一个递增数组，
一个递增数组将前面的一部分挪到后面去，这样就形成了两个递增的数组，
前面一个数组中的所有元素都要比后一个大，那么问题就有了实质的变化，就是求这两个数组的分界线，
此时整个数组的前一个元素大于后面一个元素的时候我们就可以知道，此时后面一个元素就是整个数组的最小值。

循环遍历比较数组中前后两个元素，当遇到后一个比前一个小的时候，将后一个返回此时就是最小的元素

import java.util.ArrayList;
public class Solution {
    public int minNumberInRotateArray(int [] array) {
        if(array.length == 0)
            return 0;
        for(int i = 0; i < array.length-1; i++){
            if(array[i]>array[i+1]){
                return array[i+1];
            }
        }
        return array[0];
    }
}

