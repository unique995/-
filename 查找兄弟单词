输入描述:

先输入字典中单词的个数n，再输入n个单词作为字典单词。

再输入一个单词，查找其在字典中兄弟单词的个数m

再输入数字k


输出描述:

根据输入，输出查找到的兄弟单词的个数m

然后输出查找到的兄弟单词的第k个单词。


public class Main{
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        while (in.hasNext()){
            int num = in.nextInt();    //单词的个数
            String[] s = new String[num];
            int count = 0;
            for (int i = 0;i < s.length;i++){   //把单词放在数组里
                s[i] = in.next();
            }
            String key = in.next();       //要找的单词
            char []keyChar = key.toCharArray();
            Arrays.sort(keyChar);
            int no = in.nextInt();   //输入的数字k，下面会输出第k个兄弟单词
            ArrayList<String> list = new ArrayList<String>();
            for (int i = 0;i < num;i++){
                int c = check(key,s[i],keyChar);
                count += c;
                if(c == 1){
                    list.add(s[i]);
                }
                System.out.println(count);
                Collections.sort(list); 
                if(count>=no){
                    System.out.println(list.get(no-1));
                }
            }
        }
    }
    public static int check(String key,String word,char[]keyChar){
        if(key.equals(word)||key.length()!=word.length())  //两个单词相等也不是兄弟单词
            return 0;
        char []wordChar = word.toCharArray();
        Arrays.sort(wordChar);                      //字典元素要排序
        return Arrays.equals(keyChar,wordChar) ? 1:0;
    }
}
