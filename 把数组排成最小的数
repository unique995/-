输入一个正整数数组，把数组里所有数字拼接起来排成一个数，打印能拼接出的所有数字中最小的一个。
例如输入数组{3，32，321}，则打印出这三个数字能排成的最小数字为321323。
思路：将所有的数存到一个list里面，通过一个一个排序算法对所有成员进行排序。
这个排序算法这里引用了Collection的sort方法，并自定义了一个比较器，
按照分别通过将两个数字组成前后顺序互换的两个新数字这种比较方法去实现排序算法。

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
public class Solution {
    public String PrintMinNumber(int [] numbers) {
        int n;
        StringBuilder string = new StringBuilder();
        ArrayList<Integer> list = new ArrayList<>();
        n = numbers.length;
        for(int i=0; i < n; i++){
            list.add(numbers[i]);
        }
        Collections.sort(list, new Comparator<Integer>(){
            @Override
            public int compare(Integer str1, Integer str2){
                String s1 = str1 + "" + str2;
                String s2 = str2 + "" + str1;
                return s1.compareTo(s2);
            }
        });
        for(int j : list){
            string.append(j);
        }
        return string.toString();
    }
}
