//编写代码，以给定值x为基准将链表分割成两部分，所有小于x的结点排在大于或等于x的结点之前
//给定一个链表的头指针 ListNode* pHead，请返回重新排列后的链表的头指针。注意：分割以后保持原来的数据顺序不变

import java.util.*;

/*
public class ListNode {
    int val;
    ListNode next = null;

    ListNode(int val) {
        this.val = val;
    }
}*/
public class Partition {
    public ListNode partition(ListNode pHead, int x) {
        // write code here
      if(pHead == null || pHead.next == null){
        return pHead;
      }
      ListNode Dhead = new ListNode(-1);
      ListNode Xhead = new ListNode(-1);
      ListNode Dtmp = Dhead;
      ListNode Xtmp = Xhead;
      ListNode cur = pHead;
      while(cur != null){
        if(cur.val <x){
          Xtmp.next = new ListNode(cur.val);
          Xtmp = Xtmp.next;
        }else{
          Dtmp.next = new ListNode(cur.val);
          Dtmp = Dtmp.next;
        }
        cur = cur.next;
      }
      cur = Xhead;
      while(cur.next != null && cur.next.val!= -1){
        cur = cur.next;
      }
      cur.next = Dhead.next;
      return Xhead.next;
    }
}
